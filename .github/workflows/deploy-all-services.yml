name: Deploy All Services (Frontend + Backend)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1
  ECS_CLUSTER: skillbridge-cluster

jobs:
  deploy-frontend:
    name: Deploy Frontend App
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push frontend app
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd app
        docker build -t $ECR_REGISTRY/skillbridge-frontend-app:$IMAGE_TAG .
        docker push $ECR_REGISTRY/skillbridge-frontend-app:$IMAGE_TAG

    - name: Update frontend service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service frontend-app \
          --force-new-deployment \
          --region $AWS_REGION

  deploy-booking:
    name: Deploy Booking Service
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push booking service
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd booking-service
        docker build -t $ECR_REGISTRY/skillbridge-booking-service:$IMAGE_TAG .
        docker push $ECR_REGISTRY/skillbridge-booking-service:$IMAGE_TAG

    - name: Update booking service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service booking-service \
          --force-new-deployment \
          --region $AWS_REGION

  deploy-user:
    name: Deploy User Service
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push user service
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd user-service
        docker build -t $ECR_REGISTRY/skillbridge-user-service:$IMAGE_TAG .
        docker push $ECR_REGISTRY/skillbridge-user-service:$IMAGE_TAG

    - name: Update user service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service user-service \
          --force-new-deployment \
          --region $AWS_REGION

  deploy-code-review:
    name: Deploy Code Review Service
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push code review service
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd code-review-service
        docker build -t $ECR_REGISTRY/skillbridge-code-review-service:$IMAGE_TAG .
        docker push $ECR_REGISTRY/skillbridge-code-review-service:$IMAGE_TAG

    - name: Update code review service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service code-review-service \
          --force-new-deployment \
          --region $AWS_REGION